/* Generated by AN DISI Unibo */ 
package it.unibo.console

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Console ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("%%%% Console intialized %%%%")
					}
					 transition( edgeName="goto",targetState="waitForStart", cond=doswitch() )
				}	 
				state("waitForStart") { //this:State
					action { //it:State
					}
					 transition(edgeName="s00",targetState="sendStart",cond=whenDispatch("userCmd"))
				}	 
				state("sendStart") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("userCmd(CMD)"), Term.createTerm("userCmd(start)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								forward("startCmd", "startCmd" ,"robotmind" ) 
						}
						println("Sent start  message")
					}
					 transition( edgeName="goto",targetState="waitForStop", cond=doswitch() )
				}	 
				state("waitForStop") { //this:State
					action { //it:State
					}
					 transition(edgeName="s01",targetState="sendStop",cond=whenDispatch("userCmd"))
				}	 
				state("sendStop") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("userCmd(CMD)"), Term.createTerm("userCmd(stop)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								forward("userCmd", "userCmd(stop)" ,"robotmind" ) 
						}
						println("Sent stop  message")
					}
				}	 
			}
		}
}
