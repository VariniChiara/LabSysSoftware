/* Generated by AN DISI Unibo */ 
package it.unibo.blinkinghandler

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Blinkinghandler ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
					}
					 transition(edgeName="t032",targetState="sendBlinkingMsg",cond=whenDispatch("startBlinking"))
				}	 
				state("sendBlinkingMsg") { //this:State
					action { //it:State
						println("blinking")
						itunibo.robot.robotSupport.move( "msg(b)"  )
					}
					 transition(edgeName="t133",targetState="stopBlinking",cond=whenDispatch("stopBlinking"))
				}	 
				state("stopBlinking") { //this:State
					action { //it:State
						println("stop blinking")
					}
					 transition( edgeName="goto",targetState="s0", cond=doswitch() )
				}	 
			}
		}
}
